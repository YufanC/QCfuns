% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qc_chgfb.r
\name{qc_chgfb}
\alias{qc_chgfb}
\title{Create Change From Baseline Over Time Table}
\usage{
qc_chgfb(
  input,
  val = "AVAL",
  chg = "CHG",
  rowvar = c("PARAM", "TRT01P", "AVISIT"),
  stats_list = c("N", "Mean", "SD", "Median", "Min", "Max"),
  max_digit = 2,
  keep = TRUE
)
}
\arguments{
\item{input}{input dataframe}

\item{val}{measurement variable}

\item{chg}{change from baseline measurement variable}

\item{rowvar}{row variable (can be a set of two variables such as 
\code{c("TRT01P", "AVISIT")} or three variables such as \code{c("PARAM", "TRT01P", "AVISIT")})}

\item{stats_list}{stats variables to display. Accepted values are 
\code{c("N", "Mean", "SD", "Median", "Min", "Max", "CV", "Base_mean")} and the order of variables matters}

\item{max_digit}{largest number of digit to display}

\item{keep}{if = TRUE, keep all levels. Default = TRUE}
}
\value{
change from baseline table
}
\description{
create change from baseline over time table, table can be ordered by param, treatment group and visit
}
\details{
The number of decimal places the results will keep depends on a variable "digit" 
in the input dataset. If digit variable does not exist in input dataset, the number
of decimal places will depend on the number of decimal places of AVAL/CHG
}
\examples{
adsl <- data.frame(
  USUBJID = 1:10,
  TRT01P = factor(sample(c("A", "B", "C"), 10, replace = TRUE)))
  
param <- data.frame(PARAM = c("Test1", "Test2"))
visit <- data.frame(AVISIT = c("Baseline", "Visit1", "Visit2"))

adlb0 <- merge(adsl, param)
adlb0$BASE <- sample(1:100, 20)

adlb <- merge(adlb0, visit)
adlb$AVAL <- sample(1:100, 60)
adlb$CHG <- ifelse(adlb$AVISIT == "Baseline", NA, adlb$AVAL - adlb$BASE)
adlb$digit <- ifelse(adlb$PARAM == "Test1", 0, 2)

tab1 <- qc_chgfb(adlb, "AVAL", "CHG", rowvar = c("PARAM", "TRT01P", "AVISIT"), 
                 max_digit = 0, keep = FALSE)
tab1
}
